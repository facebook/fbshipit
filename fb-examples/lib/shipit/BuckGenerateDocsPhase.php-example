<?hh // strict
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
namespace Facebook\ShipIt;

/**
 * Generate buck documentation from source repo into the destination repo.
 */
final class BuckGenerateDocsPhase extends ShipItPhase {
  const GH_PAGES_BRANCH = 'gh-pages';

  <<__Override>>
  public function isProjectSpecific(): bool {
    return true;
  }

  <<__Override>>
  public function getReadableName(): string {
    return 'Generate buck documentation';
  }

  <<__Override>>
  protected function runImpl(
    ShipItBaseConfig $config,
  ): void {
    $sourcePath = $config->getSourcePath();
    $docsPath = $config->getDestinationPath();
    $branch = $config->getDestinationBranch();

    $verbose =
      $config->isVerboseEnabled()
        ? ShipItUtil::VERBOSE_SHELL_OUTPUT
        : ShipItUtil::DONT_VERBOSE;

    // Get out of our current branch so it can be deleted.
/* HH_FIXME[4128] Use ShipItShellCommand */
    ShipItUtil::shellExec(
      $docsPath,
      /* stdin = */ null,
      $verbose,
      'git', 'checkout', '--detach',
    );

    // Delete the current branch.
/* HH_FIXME[4128] Use ShipItShellCommand */
    ShipItUtil::shellExec(
      $docsPath,
      /* stdin = */ null,
      $verbose,
      'git', 'branch', '--delete', '--force', $branch,
    );

    // Create a historyless branch in its place.
/* HH_FIXME[4128] Use ShipItShellCommand */
    ShipItUtil::shellExec(
      $docsPath,
      /* stdin = */ null,
      $verbose,
      'git', 'checkout', '--orphan', $branch,
    );

    // Erase all existing files.
/* HH_FIXME[4128] Use ShipItShellCommand */
    ShipItUtil::shellExec(
      $docsPath,
      /* stdin = */ null,
      $verbose,
      'git', 'rm', '--force', '-r', '.',
    );

    $pipes = array();
    $proc = \proc_open(
      'docs/soyweb-prod.sh',
      array(
        0 => array('pipe', 'r'),
        1 => array('file', '/dev/null', 'w'),
        2 => array('file', '/dev/null', 'w'),
      ),
      &$pipes,
      $sourcePath
    );
    \fclose($pipes[0]);

    try {
/* HH_FIXME[4128] Use ShipItShellCommand */
      ShipItUtil::shellExec(
        $sourcePath,
        /* stdin = */ null,
        $verbose,
        'docs/soy2html.sh', $docsPath,
      );
    } finally {
      $status = \proc_get_status($proc);
      if ($status !== null) {
        // kill whole tree of docs/soyweb-prod.sh
        \exec('pstree -pl '.$status['pid'].
             ' | grep -o "([0-9]\+)" | sed "s/(\|)//g" | xargs kill');
      }
    }

/* HH_FIXME[4128] Use ShipItShellCommand */
    ShipItUtil::shellExec(
      $docsPath,
      /* stdin = */ null,
      $verbose,
      'git', 'add', '.',
    );

/* HH_FIXME[4128] Use ShipItShellCommand */
    $sourceCommitHash = \rtrim(ShipItUtil::shellExec(
      $sourcePath,
      /* stdin = */ null,
      $verbose,
      'git', 'log', '-1', '--format=%H',
    ));
/* HH_FIXME[4128] Use ShipItShellCommand */
    ShipItUtil::shellExec(
      $docsPath,
      /* stdin = */ null,
      $verbose,
      'git', 'commit',
      '-m', \sprintf('Updated HTML documentation to %s.', $sourceCommitHash),
    );
  }
}
