<?hh // strict
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
namespace Facebook\ShipIt\Config;

use Facebook\ImportIt\ImportItRustPathFilters;
use \Facebook\ShipIt\ {
  FBCommonFilters,
  FBShipItCLIStaticConfig,
  FBShipItConfig,
  FBSourceBranchConfig,
  GetPathMappingsFn,
  ShipItChangeset,
  ShipItPathFilters,
};

final class FacebookexperimentalMononoke extends FBShipItConfig {

  <<__Override>>
  protected static function projectImportChangeset(
    ShipItChangeset $changeset,
    FBSourceBranchConfig $branch_config,
  ): ShipItChangeset {
    return $changeset
      |> self::filterImportSubmodules($$)
      |> ImportItRustPathFilters::moveDirectories(
        $$,
        (self::getPathMappingsFn($branch_config))(),
        static::getSubmoduleMappings()
          ->keys()
          ->map($path ==> '@^'.$path.'$@'),
      );
  }

  <<__Override>>
  public static function getDefaultPathMappings(): ImmMap<string, string> {
    // The order here is important -- ImportIt matches paths in reverse order.
    return ImmMap {
      'fbcode/scm/mononoke/' => '',
      'fbcode/common/rust/async-compression/' => 'async-compression/',
      'fbcode/common/rust/asyncmemo/' => 'asyncmemo/',
      'fbcode/common/rust/bytes-ext/' => 'bytes-ext/',
      'fbcode/common/rust/futures-ext/' => 'futures-ext/',
      'fbcode/common/rust/failure_ext/' => 'failure_ext/',
      'fbcode/common/rust/netstring/' => 'netstring/',
      'fbcode/common/rust/utils/py_tar_utils/' => 'py_tar_utils/',
      ImportItRustPathFilters::RUST_OSS_CONFIGS => '',
    };
  }

  <<__Override>>
  public static function getStaticConfig(): FBShipItCLIStaticConfig {
    return shape(
      'internalRepo' => 'fbsource',
      'githubOrg' => 'facebookexperimental',
      'githubProject' => 'mononoke',
    );
  }
}
