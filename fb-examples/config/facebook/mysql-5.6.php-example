<?hh // strict
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
namespace Facebook\ShipIt\Config;

use \Facebook\ShipIt\ {
  FBShipItCLIStaticConfig,
  FBShipItConfig,
  FBSourceBranchConfig,
};

final class FacebookMysql56 extends FBShipItConfig {
  const string ROOT = '';

  // There needs to be an entry for this name in ~/fbcode/opensource/shipit/
  // src/fb-specific-but-public/FBRepoInitPhase.php. AFAIU this name has no
  // relationship with the project name ("mysql") or repository name
  // ("mysql-5.6") for the particular project.
  const string INTERNAL_REPO_NAME = 'mysql-fb';

  // This is the branch under internal repository. Please note that there's no
  // "origin" prefix here. Whatever you add here should return a valid Git hash
  // after "git rev-parse origin/branch_name". NB! If you change it here then
  // you'll need to modify FBRepoInitPhase.php as well.
  const string SOURCE_BRANCH = 'fb-mysql-5.6.35';

  // This is the actual GitHub destination branch where changes will be pushed
  // to. It should be accessible from under the project URI:
  // https://github.com/facebook/mysql-5.6
  const string DESTINATION_BRANCH = 'fb-mysql-5.6.35';

  <<__Override>>
  protected static function getStripCommonFilesExceptions(): ImmVector<string> {
    // We want to keep .mk files for native code
    return ImmVector {
      '@\.mk$@',
    };
  }

  <<__Override>>
  public static function getDefaultPathMappings(): ImmMap<string, string> {
    return ImmMap {
      self::ROOT => '',
    };
  }

  <<__Override>>
  public static function getSubmoduleMappings(): ImmMap<string, string> {
    return ImmMap {
      'rocksdb' => 'rocksdb',
      'rqg'=> 'rqg',
    };
  }

  <<__Override>>
  public static function getStaticConfig(): FBShipItCLIStaticConfig {
    return shape(
      'internalRepo' => self::INTERNAL_REPO_NAME,
      'githubOrg' => 'facebook',
      'githubProject' => 'mysql-5.6',
    );
  }

  <<__Override>>
  public static function getBranchConfigs(): ImmVector<FBSourceBranchConfig> {
    return ImmVector {
      shape(
        'internal' => self::SOURCE_BRANCH,
        'external' => self::DESTINATION_BRANCH,
      ),
    };
  }

  <<__Override>>
  public static function getLandBranch(): ?string {
    return self::SOURCE_BRANCH;
  }
}
