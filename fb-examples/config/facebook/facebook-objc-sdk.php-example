<?hh // strict
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
namespace Facebook\ShipIt\Config;

use \Facebook\ShipIt\ {
  FBShipItCLIStaticConfig,
  FBShipItConfig,
};

final class FacebookFacebookObjcSdk extends FBShipItConfig {
  const string ROOT = 'fbobjc/ios-sdk/';

  <<__Override>>
  protected static function getDefaultStrippedFiles(): ImmVector<string> {
    return ImmVector {
      '@^'.self::ROOT.'\.DS_Store$@',
      '@^'.self::ROOT.'BUCK$@',
      '@^'.self::ROOT.'README.fb$@',
      '@.*build-buck.sh@',
      '@.*Buck-Info.plist@',
      '@.*Entitlements@',
      '@^'.self::ROOT.'\.hg.*$@',
      '@^'.self::ROOT.'AccountKit@',
      '@^'.self::ROOT.'Bolts-ObjC@',
      '@^'.self::ROOT.'Carthage@',
      '@^'.self::ROOT.'FBNotifications@',
      '@^'.self::ROOT.'ads@',
      '@^'.self::ROOT.'internal@',
      '@^'.self::ROOT.'vendor@',
    };
  }

  <<__Override>>
  public static function getDefaultPathMappings(): ImmMap<string, string> {
    return ImmMap {
      self::ROOT => '',
    };
  }

  <<__Override>>
  public static function getSubmoduleMappings(): ImmMap<string, string> {
    return ImmMap {
      self::ROOT.'submodules/Bolts-ObjC.txt' => 'Carthage/Checkouts/Bolts-ObjC',
      self::ROOT.'submodules/ocmock.txt' => 'Carthage/Checkouts/ocmock',
      self::ROOT.'submodules/OHHTTPStubs.txt' =>
        'Carthage/Checkouts/OHHTTPStubs',
      self::ROOT.'submodules/Tweaks.txt' => 'Carthage/Checkouts/Tweaks',
      self::ROOT.'submodules/xctool.txt' => 'Carthage/Checkouts/xctool',
    };
  }

  <<__Override>>
  public static function getStaticConfig(): FBShipItCLIStaticConfig {
    return shape(
      'internalRepo' => 'fbsource',
      'githubOrg' => 'facebook',
      'githubProject' => 'facebook-objc-sdk',
    );
  }
}
