<?hh // strict
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
namespace Facebook\ShipIt\Config;

use \Facebook\ShipIt\ {
  FBShipItCLIStaticConfig,
  FBShipItConfig,
  FBSourceBranchConfig,
};

final class FacebookRedex extends FBShipItConfig {

  <<__Override>>
  public static function getDefaultPathMappings(): ImmMap<string, string> {
    return self::getMasterPathMappings();
  }

  <<__Override>>
  public static function getStaticConfig(): FBShipItCLIStaticConfig {
    return shape(
      'internalRepo' => 'fbsource',
      'githubOrg' => 'facebook',
      'githubProject' => 'redex',
    );
  }

  private static function getMasterPathMappings(): ImmMap<string, string> {
    return ImmMap {
      // liblocator is a library that is depended on by dextricks and redex
      // itself. As such, it is located outside the native/redex folder.
      'fbandroid/native/liblocator/' => 'liblocator/',
      // The abstract interpretation library has become a standalone project
      // and will now reside in xplat.
      'xplat/sparta/' => 'sparta/',
      'fbandroid/native/redex/' => '',
    };
  }

  private static function getStablePathMappings(): ImmMap<string, string> {
    return ImmMap {
      'fbandroid/native/liblocator/' => 'liblocator/',
      'xplat/sparta/' => 'sparta/',
      'fbandroid/native/redex-stable/' => '',
    };
  }

  /**
   * fbsource/fbandroid/native/redex/       syncs with github `master` branch
   * fbsource/fbandroid/native/redex-stable syncs with github `stable` branch
   */
  <<__Override>>
  public static function getBranchConfigs(): ImmVector<FBSourceBranchConfig> {
    return ImmVector {
      shape(
        'internal' => 'master',
        'external' => 'master',
        'getPathMappings' => () ==> self::getMasterPathMappings(),
      ),
      shape(
        'internal' => 'master',
        'external' => 'stable',
        'getPathMappings' => () ==> self::getStablePathMappings(),
      ),
    };
  }

  <<__Override>>
  protected static function getDefaultStrippedFiles(): ImmVector<string> {
    return ImmVector {
      '@/REDEX_DEFS$@',
      '@/REDEX_TEST_DEFS$@',
      '@/.*\.bzl$@',
    };
  }

}
