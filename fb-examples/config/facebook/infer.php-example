<?hh // strict
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
namespace Facebook\ShipIt\Config;

use \Facebook\ShipIt\ {
  FBCommonFilters,
  FBShipItCLIStaticConfig,
  FBShipItConfig,
  FBSourceBranchConfig,
  GetPathMappingsFn,
  ShipItChangeset,
  ShipItDiff,
  ShipItFilterSanityCheckPhase,
  ShipItPhase,
};

final class FacebookInfer extends FBShipItConfig {

  <<__Override>>
  protected static function defaultProjectFilterChangeset(
    ShipItChangeset $changeset,
    GetPathMappingsFn $get_path_mappings,
  ): ShipItChangeset {
    $subject = $changeset->getSubject();
    return $changeset
      |> FBCommonFilters::stripSummariesByDefault($$)
      |> FBCommonFilters::applyAll(
          $$,
          shape(
            'stripCommonFiles/exceptions'
              => static::getStripCommonFilesExceptions(),
          ),
        )
      |> $$->withSubject($subject)
      |> $$->withDiffs($$->getDiffs()->filter(
          $diff ==> !self::matchesPrefixList($diff, self::getBlacklist())
      ));
  }

  <<__Override>>
  protected static function getStripCommonFilesExceptions(): ImmVector<string> {
    return ImmVector {
      '@(^|/)BUCK$@',
      '@\.mk$@',
    };
  }

  <<__Override>>
  public static function getDefaultPathMappings(): ImmMap<string, string> {
    return ImmMap {
      '' => '',
    };
  }

  <<__Override>>
  public static function getStaticConfig(): FBShipItCLIStaticConfig {
    return shape(
      'internalRepo' => 'infer-fb',
      'githubOrg' => 'facebook',
      'githubProject' => 'infer',
    );
  }

  <<__Override>>
  public static function getPhases(
    FBSourceBranchConfig $branch_config,
  ): ImmVector<ShipItPhase> {
    // The SanityCheck is incompatible with the whitelist approach
    return parent::getPhases($branch_config)->filter(
      $phase ==> !($phase instanceof ShipItFilterSanityCheckPhase)
    );
  }

  private static function matchesPrefixList(
    ShipItDiff $diff,
    ImmSet<string> $list,
  ): bool {
    $path = $diff['path'];
    foreach ($list as $entry) {
      if (\strpos($path, $entry) === 0) {
        return true;
      }
    }
    return false;
  }

  private static function getBlacklist(): ImmSet<string> {
    return ImmSet {
      '.arcconfig',
      '.jfconfig',
      '.deweyconfig',
      '.facebook',
      '.watchmanconfig',
      'ci_config.json',
      'info.json',
      'pull-request.patch',
      'setup-infer.sh',
      'setup.sh',
      'arcanist/',
      'benchmarks/',
      'data/',
      'facebook/',
    };
  }
}
